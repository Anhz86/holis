/* Generated By:JavaCC: Do not edit this line. AnalizadorARMConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalizadorARMConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ENT = 5;
  /** RegularExpression Id. */
  int FLOT = 6;
  /** RegularExpression Id. */
  int BOOL = 7;
  /** RegularExpression Id. */
  int CAD = 8;
  /** RegularExpression Id. */
  int VAR = 9;
  /** RegularExpression Id. */
  int MAS = 10;
  /** RegularExpression Id. */
  int MENOS = 11;
  /** RegularExpression Id. */
  int MULT = 12;
  /** RegularExpression Id. */
  int DIV = 13;
  /** RegularExpression Id. */
  int RES = 14;
  /** RegularExpression Id. */
  int INC = 15;
  /** RegularExpression Id. */
  int DEC = 16;
  /** RegularExpression Id. */
  int AND = 17;
  /** RegularExpression Id. */
  int OR = 18;
  /** RegularExpression Id. */
  int NOT = 19;
  /** RegularExpression Id. */
  int IGUALDAD = 20;
  /** RegularExpression Id. */
  int IGUAL = 21;
  /** RegularExpression Id. */
  int DESIGUALDAD = 22;
  /** RegularExpression Id. */
  int MAYOR = 23;
  /** RegularExpression Id. */
  int MENOR = 24;
  /** RegularExpression Id. */
  int MAYORIGUAL = 25;
  /** RegularExpression Id. */
  int MENORIGUAL = 26;
  /** RegularExpression Id. */
  int ENTEROS = 27;
  /** RegularExpression Id. */
  int NUMERODECIMAL = 28;
  /** RegularExpression Id. */
  int FOR = 29;
  /** RegularExpression Id. */
  int WHILE = 30;
  /** RegularExpression Id. */
  int MATRIZ = 31;
  /** RegularExpression Id. */
  int VECTOR = 32;
  /** RegularExpression Id. */
  int SI = 33;
  /** RegularExpression Id. */
  int SINO = 34;
  /** RegularExpression Id. */
  int LEER = 35;
  /** RegularExpression Id. */
  int ESCRIBIR = 36;
  /** RegularExpression Id. */
  int PUNTO = 37;
  /** RegularExpression Id. */
  int DELIMITADOR = 38;
  /** RegularExpression Id. */
  int COMA = 39;
  /** RegularExpression Id. */
  int CORCHIZQ = 40;
  /** RegularExpression Id. */
  int CORCHDER = 41;
  /** RegularExpression Id. */
  int LLAVEIZQ = 42;
  /** RegularExpression Id. */
  int LLAVEDER = 43;
  /** RegularExpression Id. */
  int PARENIZQ = 44;
  /** RegularExpression Id. */
  int PARENDER = 45;
  /** RegularExpression Id. */
  int CONCATENAR = 46;
  /** RegularExpression Id. */
  int VOID = 47;
  /** RegularExpression Id. */
  int PUBLICO = 48;
  /** RegularExpression Id. */
  int PRIVADO = 49;
  /** RegularExpression Id. */
  int ESTATICO = 50;
  /** RegularExpression Id. */
  int RETURN = 51;
  /** RegularExpression Id. */
  int MATH = 52;
  /** RegularExpression Id. */
  int ARRAYCLASS = 53;
  /** RegularExpression Id. */
  int RANDOMCLASS = 54;
  /** RegularExpression Id. */
  int TIMERCLASS = 55;
  /** RegularExpression Id. */
  int RAMDONFUNC = 56;
  /** RegularExpression Id. */
  int ARRAYFUNC = 57;
  /** RegularExpression Id. */
  int TIMERFUNC = 58;
  /** RegularExpression Id. */
  int MATHFUNC = 59;
  /** RegularExpression Id. */
  int INICIO = 60;
  /** RegularExpression Id. */
  int FIN = 61;
  /** RegularExpression Id. */
  int MAIN = 62;
  /** RegularExpression Id. */
  int PROC = 63;
  /** RegularExpression Id. */
  int FUNC = 64;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 65;
  /** RegularExpression Id. */
  int VCAD = 66;
  /** RegularExpression Id. */
  int ERROR = 67;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"ent\"",
    "\"flot\"",
    "\"bool\"",
    "\"cad\"",
    "\"var\"",
    "\"mas\"",
    "\"menos\"",
    "\"mult\"",
    "\"div\"",
    "\"res\"",
    "\"inc\"",
    "\"dec\"",
    "\"AND\"",
    "\"OR\"",
    "\"NOT\"",
    "\"==\"",
    "\"=\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "<ENTEROS>",
    "<NUMERODECIMAL>",
    "\"for\"",
    "\"while\"",
    "\"matrix\"",
    "\"vec\"",
    "\"SI\"",
    "\"SINO\"",
    "\"leer\"",
    "\"escribir\"",
    "\".\"",
    "\";\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"void\"",
    "\"publico\"",
    "\"privado\"",
    "\"estatico\"",
    "\"return\"",
    "\"Math\"",
    "\"Array\"",
    "\"Random\"",
    "\"Timer\"",
    "<RAMDONFUNC>",
    "<ARRAYFUNC>",
    "<TIMERFUNC>",
    "<MATHFUNC>",
    "\"Inicio\"",
    "\"Fin\"",
    "\"Main()\"",
    "\"proc\"",
    "\"func\"",
    "<IDENTIFICADOR>",
    "<VCAD>",
    "<ERROR>",
  };

}
